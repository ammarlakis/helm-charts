name: Add Chart to Helm Repository

on:
  workflow_dispatch:
    inputs:
      repository:
        description: GitHub repository ID (e.g., username/reponame)
        required: true
        type: string
      release_name:
        description: Release ID to fetch the chart artifact from
        required: true
        type: string

jobs:
  add-helm-chart:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Download chart artifact
        id: downloaded_artifacts
        env:
          GH_TOKEN: ${{ github.token }}
        run: |
          gh release view ${{ inputs.release_name }} --repo ${{ inputs.repository }} --json 'assets' --jq '.assets[0] | to_entries | .[] | "\(.key)=\"\(.value)\""' >> $GITHUB_OUTPUT
          gh release download ${{ inputs.release_name }} --repo ${{ inputs.repository }}

      - name: Setup yq
        uses: dcarbone/install-yq-action@v1

      - name: Update index.yaml
        run: |
          # Extract the chart metadata from the Chart.yaml inside the .tgz file
          asset_name="${{ steps.downloaded_artifacts.outputs.name }}"
          chart_name="${asset_name%%-*}"
          tar -xzf "$asset_name"

          # Create the helm chart
          mv $chart_name/Chart.yaml .
          yq '. += {"created":"'$(date '+%Y-%m-%dT%H:%M:%S.%N%:z')'", "digest":"'$(sha256sum "$asset_name")'", "urls":[${{ steps.downloaded_artifacts.outputs.url }}]}' Chart.yml
                    
          # Add the new chart entry to the index.yaml file
          yq eval ".entries.$chart_name += load('object.yaml')" -i index.yaml

          # Update generation date
          yq eval ".generated = $(date '+%Y-%m-%dT%H:%M:%S.%N%:z')"

      - name: Check for changes
        id: check_changes
        run: |
          git add index.yaml

          # Check if there are any changes to commit and set output accordingly
          if [ -n "$(git diff --cached)" ]; then
            echo "changes=true" >> $GITHUB_OUTPUT
          else
            echo "changes=false" >> $GITHUB_OUTPUT
          fi

      - name: Configure Git
        if: steps.check_changes.outputs.changes == 'true'
        run: |
          git config user.name "${{ github.actor }}"
          git config user.email "${{ github.actor }}@users.noreply.github.com"

      - name: Commit changes
        if: steps.check_changes.outputs.changes == 'true'
        run: |
          git commit -m "Publishing ${{ steps.downloaded_artifacts.outputs.name }}"

      - name: Push changes
        if: steps.check_changes.outputs.changes == 'true'
        run: |
          git push origin ${{ github.event.repository.default_branch }}

  publish-pages:
    needs:
      - add-helm-chart
    permissions:
      pages: write
      id-token: write
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
